---
layout: post
title:  "Releasing ndarray 0.4"
date:   2015-03-06 02:00:00
categories: rust
---

ndarray is a Rust library providing an n-dimensional array. It has been
in furious development, and now we release the next version.

One of the most fundamental additions, contributed by @vbarrielle, is
better support for chunking and splitting array views. `ArrayView` and
`ArrayViewMut` learn the new method `.split_at(Axis, Ix)` that
splits the view, modelled on `.split_at(_mut)` for slices.

Creating a 3 × 5 × 5 array with ndarray looks like this:

{% highlight rust %}
use ndarray::OwnedArray;

let mut a = OwnedArray::range(0., 3. * 5. * 5., 1.).into_shape((3, 5, 5)).unwrap();
{% endhighlight %}

This uses the new constructor `range` (contributed by @palango),
and calls `.unwrap()` which will panic if the array does not have the
correct number of elements for the new shape.

![split_at](split_at.svg)

Splitting the array along an axis looks like this:

{% highlight rust %}
use ndarray::Axis;

let (first, second) = a.view_mut().split_at(Axis(2), 2);

// print out the shapes of the parts
println!("first={:?}, second={:?}", first.shape(), second.shape());
// Output: first=[3, 5, 2], second=[3, 5, 3]
{% endhighlight %}

`.split_at()` uses the new newtype `Axis` for the first argument, which all
axis arguments now use in version 0.4. With the splitting functionality we
are of course thinking of both regular blocking algorithms, but also of rayon,
which we look forward to integrating more with.

